swagger: '2.0'
info:
  version: "2.0"
  title: hvacAPI
  description: API for heating, ventilation, and air conditioning (HVAC) controller
schemes:
 - https
basePath: /dev
# securityDefinitions:
#   api_key:
#     type: "apiKey"
#     in: header
#     name: "x-api-key"
# security:
#   - api_key: []
consumes:
  - application/json
produces:
  - application/json
paths:
  /:
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - CORS
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          "default":
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods : "'*'"
              method.response.header.Access-Control-Allow-Origin : "'*'"
            responseTemplates:
              application/json: |
                {}
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Headers:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
    post:
      description: Adds a new hvac controller
      parameters:
        - name: area
          in: body
          description: Name of area where hvac controller is located (e.g. Main Floor)
          required: true
          schema:
            type: object
            properties:
              area:
                type: string
      responses:
        200:
          description: hvac device state with uuid
          $ref: '#/responses/headers'
          schema:
            $ref: '#/definitions/State'
        400:
          $ref: '#/responses/Error'
      x-lambda-function: state
    get:
      description: Gives list of hvac controllers
      responses:
        200:
          description: hvac controllers
          $ref: '#/responses/headers'
          schema:
            type: array
            items:
              $ref: '#/definitions/State'
      x-lambda-function: state
        
  /{uuid}:
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - CORS
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          "default":
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods : "'*'"
              method.response.header.Access-Control-Allow-Origin : "'*'"
            responseTemplates:
              application/json: |
                {}
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Headers:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
    get:
      description: Gets the state of an hvac controller
      parameters: 
        - $ref: '#/parameters/UUID'
      responses:
        200:
          description: hvac state
          $ref: '#/responses/headers'
          schema:
            $ref: '#/definitions/State'
        400:
          $ref: '#/responses/Error'
      x-lambda-function: state

    put:
      description: Updates the state of an hvac controller
      parameters: 
        - $ref: '#/parameters/UUID'
        - name: state
          in: body
          description: hvac state
          schema:
            $ref: '#/definitions/State'
      responses:
        200:
          description: Successfully updated hvac controller
          $ref: '#/responses/headers'
        400:
          $ref: '#/responses/Error'
      x-lambda-function: state
    delete:
      description: Delete an hvac controller by id
      parameters:
          - $ref: '#/parameters/UUID'
      responses:
        200:
          description: Successfully deleted hvac controller
          $ref: '#/responses/headers'
        400:
          $ref: '#/responses/Error'
      x-lambda-function: state
        
definitions:
  State:
    description: hvac controller state
    type: object
    properties:
      uuid:
        type: string
      area:
        type: string
      heater:
        type: boolean
      ac:
        type: boolean
      fan:
        type: boolean
      off_time:
        type: integer
      min_off_time:
        type: integer
      update_period:
        type: integer

parameters:
  UUID:
    name: uuid
    in: path
    type: string
    required: true
    description: Id of hvac controller

responses:
  headers:
    Access-Control-Allow-Headers:
      type: "string"
    Access-Control-Allow-Methods:
      type: "string"
    Access-Control-Allow-Origin:
      type: "string"
  Error:
    description: Invalid request error
    $ref: '#/responses/headers'    
    schema:
      type: object
      properties:
        message:
          type: string
          
x-lambda-functions:
  state:
    runtime: python3.6
    handler: state.lambda_handler
    memory: 128
    path_to_code: ./
  
    